<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mach-ii PUBLIC "-//Mach-II//DTD Mach-II Configuration 1.9.0//EN"
	"http://www.mach-ii.com/dtds/mach-ii_1_9_0.dtd" >

<mach-ii version="1.9">
	
	<!-- INCLUDES -->
	<includes>
		<!-- <include file="./mach-ii_coldspringProperty.xml" /> -->
	</includes>

	<!-- MODULES -->
	<modules>
		<!-- The Dashboard module is included as part of the base Mach-II 1.9 download -->
		<module name="dashboard" file="/MachII/dashboard/config/mach-ii_dashboard.xml">
			<mach-ii>
				<properties>
					<property name="password" value="%DASHBOARDPASSWORD%" />
				</properties>
			</mach-ii>
		</module>
	</modules>
	
	<!-- PROPERTIES -->
	<properties>
		<property name="applicationRoot" value="%APPROOTPATH%" />
		<property name="defaultEvent" value="home" />
		<property name="eventParameter" value="%EVENTPARAMETER%" />
		<property name="parameterPrecedence" value="form" />
		<property name="maxEvents" value="10" />
		<property name="exceptionEvent" value="exception" />
		
		<!-- CACHING RELATED -->
		<!-- This will create an unnamed cache that caches data for 1 hour in the application scope -->
		<property name="caching" type="MachII.caching.CachingProperty" />
		
		<!-- LOGGING RELATED -->
		<!-- This will log to the screen -->
		<!-- <property name="logging" type="MachII.logging.LoggingProperty" /> -->
		
		<!--  HTML HELPER PROPERTY -->
		<property name="html" type="MachII.properties.HtmlHelperProperty" />
	</properties>

	<!-- LISTENERS -->
	<listeners>
		<!--
		<listener name="yourListenerName" type="fully.Qualified.Dot.Delimited.Path.To.CFC">
			<parameters>
				<parameter name="yourParameterName" value="yourParameterValue" />
			</parameters>
		</listener>
		-->
	</listeners>
	
	<!-- MESSAGE SUBSCRIBERS -->
	<message-subscribers>
		<!-- see the messagePublisher event handler below for an example of what would call this -->
		<!--
		<message name="needStuff" multithreaded="true" waitForThreads="true" timeout="10">
			<subscribe listener="listener1" method="method1" resultArg="stuff1" />
			<subscribe listener="listener2" method="method2" resultArg="stuff2" />
		</message>
		-->
	</message-subscribers>
	
	<!-- EVENT-FILTERS -->
	<event-filters>
		<!--
		<event-filter name="yourEventFilterName" type="fully.Qualified.Dot.Delimited.Path.To.CFC">
			<parameters>
				<parameter name="yourParameterName" value="yourParameterValue" />
			</parameters>
		</event-filter>
		-->
	</event-filters>

	<!-- PLUGINS -->
	<plugins>
		<!--
		<plugin name="yourPluginName" type="fully.Qualified.Dot.Delimited.Path.To.CFC">
			<parameters>
				<parameter name="yourParameterName" value="yourParameterValue" />
			</parameters>
		</plugin>
		-->
	</plugins>

	<!-- EVENT-HANDLERS -->
	<event-handlers>
		<event-handler event="home" access="public">
			<view-page name="home" contentArg="layout.content"/>
			<execute subroutine="layout.main"/>
		</event-handler>
		
		<!-- sample event handler that uses caching and the default cache (data cached for 1 hour in application scope) -->
		<!--
		<event-handler event="useCache" access="public">
			<cache>
				<notify listener="SomeListener" method="getDataForCache" resultArg="cachedData" />
			</cache>
		</event-handler>
		-->
		
		<!-- sample event handler that uses message/subscriber listener notification -->
		<!--
		<event-handler event="messagePublisher" access="public">
			<publish message="needStuff" />
		</event-handler>
		-->
	
		<event-handler event="exception" access="private">
			<view-page name="exception" contentArg="layout.content"/>
			<execute subroutine="layout.main"/>
		</event-handler>
	</event-handlers>
	
	<!-- SUBROUTINES -->
	<subroutines>
		<subroutine name="layout.main">
			<view-page name="layout.header" contentArg="layout.header"/>
			<view-page name="layout.footer" contentArg="layout.footer"/>
			<view-page name="layout.wrapper"/>
		</subroutine>
		
		<!--
		<subroutine name="yourSubroutineName">
		</subroutine>
		-->
	</subroutines>
	
	<!-- PAGE-VIEWS -->
	<page-views>
		<!--
		This loads all pages which match /views/**/*.cfm, so a page-view called home would 
		translate to /views/home.cfm and page-view called aboutUs.index would translate to 
		/views/aboutUs/index.cfm 
		-->
		<view-loader type="PatternViewLoader" />
		
		<!-- You can specify additional views not handled by the View Loaders in the following 
		format: <page-view name="viewName" page="/views/someView.cfm"/> 
		-->
	</page-views>
	
</mach-ii>
